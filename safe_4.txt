
s4:     file format elf32-i386


Disassembly of section .init:

00000544 <_init>:
 544:	53                   	push   %ebx
 545:	83 ec 08             	sub    $0x8,%esp
 548:	e8 43 01 00 00       	call   690 <__x86.get_pc_thunk.bx>
 54d:	81 c3 5f 2a 00 00    	add    $0x2a5f,%ebx
 553:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 559:	85 c0                	test   %eax,%eax
 55b:	74 05                	je     562 <_init+0x1e>
 55d:	e8 e6 00 00 00       	call   648 <__gmon_start__@plt>
 562:	83 c4 08             	add    $0x8,%esp
 565:	5b                   	pop    %ebx
 566:	c3                   	ret    

Disassembly of section .plt:

00000570 <.plt>:
 570:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 576:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 57c:	00 00                	add    %al,(%eax)
	...

00000580 <free@plt>:
 580:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 586:	68 00 00 00 00       	push   $0x0
 58b:	e9 e0 ff ff ff       	jmp    570 <.plt>

00000590 <fgets@plt>:
 590:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 596:	68 08 00 00 00       	push   $0x8
 59b:	e9 d0 ff ff ff       	jmp    570 <.plt>

000005a0 <sleep@plt>:
 5a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 5a6:	68 10 00 00 00       	push   $0x10
 5ab:	e9 c0 ff ff ff       	jmp    570 <.plt>

000005b0 <__stack_chk_fail@plt>:
 5b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 5b6:	68 18 00 00 00       	push   $0x18
 5bb:	e9 b0 ff ff ff       	jmp    570 <.plt>

000005c0 <malloc@plt>:
 5c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 5c6:	68 20 00 00 00       	push   $0x20
 5cb:	e9 a0 ff ff ff       	jmp    570 <.plt>

000005d0 <puts@plt>:
 5d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 5d6:	68 28 00 00 00       	push   $0x28
 5db:	e9 90 ff ff ff       	jmp    570 <.plt>

000005e0 <exit@plt>:
 5e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 5e6:	68 30 00 00 00       	push   $0x30
 5eb:	e9 80 ff ff ff       	jmp    570 <.plt>

000005f0 <__libc_start_main@plt>:
 5f0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 5f6:	68 38 00 00 00       	push   $0x38
 5fb:	e9 70 ff ff ff       	jmp    570 <.plt>

00000600 <fopen@plt>:
 600:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 606:	68 40 00 00 00       	push   $0x40
 60b:	e9 60 ff ff ff       	jmp    570 <.plt>

00000610 <__printf_chk@plt>:
 610:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 616:	68 48 00 00 00       	push   $0x48
 61b:	e9 50 ff ff ff       	jmp    570 <.plt>

00000620 <strtol@plt>:
 620:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
 626:	68 50 00 00 00       	push   $0x50
 62b:	e9 40 ff ff ff       	jmp    570 <.plt>

00000630 <__assert_fail@plt>:
 630:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
 636:	68 58 00 00 00       	push   $0x58
 63b:	e9 30 ff ff ff       	jmp    570 <.plt>

Disassembly of section .plt.got:

00000640 <__cxa_finalize@plt>:
 640:	ff a3 40 00 00 00    	jmp    *0x40(%ebx)
 646:	66 90                	xchg   %ax,%ax

00000648 <__gmon_start__@plt>:
 648:	ff a3 44 00 00 00    	jmp    *0x44(%ebx)
 64e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000650 <_start>:
 650:	31 ed                	xor    %ebp,%ebp
 652:	5e                   	pop    %esi
 653:	89 e1                	mov    %esp,%ecx
 655:	83 e4 f0             	and    $0xfffffff0,%esp
 658:	50                   	push   %eax
 659:	54                   	push   %esp
 65a:	52                   	push   %edx
 65b:	e8 22 00 00 00       	call   682 <_start+0x32>
 660:	81 c3 4c 29 00 00    	add    $0x294c,%ebx
 666:	8d 83 74 db ff ff    	lea    -0x248c(%ebx),%eax
 66c:	50                   	push   %eax
 66d:	8d 83 14 db ff ff    	lea    -0x24ec(%ebx),%eax
 673:	50                   	push   %eax
 674:	51                   	push   %ecx
 675:	56                   	push   %esi
 676:	ff b3 4c 00 00 00    	pushl  0x4c(%ebx)
 67c:	e8 6f ff ff ff       	call   5f0 <__libc_start_main@plt>
 681:	f4                   	hlt    
 682:	8b 1c 24             	mov    (%esp),%ebx
 685:	c3                   	ret    
 686:	66 90                	xchg   %ax,%ax
 688:	66 90                	xchg   %ax,%ax
 68a:	66 90                	xchg   %ax,%ax
 68c:	66 90                	xchg   %ax,%ax
 68e:	66 90                	xchg   %ax,%ax

00000690 <__x86.get_pc_thunk.bx>:
 690:	8b 1c 24             	mov    (%esp),%ebx
 693:	c3                   	ret    
 694:	66 90                	xchg   %ax,%ax
 696:	66 90                	xchg   %ax,%ax
 698:	66 90                	xchg   %ax,%ax
 69a:	66 90                	xchg   %ax,%ax
 69c:	66 90                	xchg   %ax,%ax
 69e:	66 90                	xchg   %ax,%ax

000006a0 <deregister_tm_clones>:
 6a0:	e8 e4 00 00 00       	call   789 <__x86.get_pc_thunk.dx>
 6a5:	81 c2 07 29 00 00    	add    $0x2907,%edx
 6ab:	8d 8a 70 00 00 00    	lea    0x70(%edx),%ecx
 6b1:	8d 82 70 00 00 00    	lea    0x70(%edx),%eax
 6b7:	39 c8                	cmp    %ecx,%eax
 6b9:	74 1d                	je     6d8 <deregister_tm_clones+0x38>
 6bb:	8b 82 3c 00 00 00    	mov    0x3c(%edx),%eax
 6c1:	85 c0                	test   %eax,%eax
 6c3:	74 13                	je     6d8 <deregister_tm_clones+0x38>
 6c5:	55                   	push   %ebp
 6c6:	89 e5                	mov    %esp,%ebp
 6c8:	83 ec 14             	sub    $0x14,%esp
 6cb:	51                   	push   %ecx
 6cc:	ff d0                	call   *%eax
 6ce:	83 c4 10             	add    $0x10,%esp
 6d1:	c9                   	leave  
 6d2:	c3                   	ret    
 6d3:	90                   	nop
 6d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 6d8:	f3 c3                	repz ret 
 6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000006e0 <register_tm_clones>:
 6e0:	e8 a4 00 00 00       	call   789 <__x86.get_pc_thunk.dx>
 6e5:	81 c2 c7 28 00 00    	add    $0x28c7,%edx
 6eb:	55                   	push   %ebp
 6ec:	8d 8a 70 00 00 00    	lea    0x70(%edx),%ecx
 6f2:	8d 82 70 00 00 00    	lea    0x70(%edx),%eax
 6f8:	29 c8                	sub    %ecx,%eax
 6fa:	89 e5                	mov    %esp,%ebp
 6fc:	53                   	push   %ebx
 6fd:	c1 f8 02             	sar    $0x2,%eax
 700:	89 c3                	mov    %eax,%ebx
 702:	83 ec 04             	sub    $0x4,%esp
 705:	c1 eb 1f             	shr    $0x1f,%ebx
 708:	01 d8                	add    %ebx,%eax
 70a:	d1 f8                	sar    %eax
 70c:	74 14                	je     722 <register_tm_clones+0x42>
 70e:	8b 92 50 00 00 00    	mov    0x50(%edx),%edx
 714:	85 d2                	test   %edx,%edx
 716:	74 0a                	je     722 <register_tm_clones+0x42>
 718:	83 ec 08             	sub    $0x8,%esp
 71b:	50                   	push   %eax
 71c:	51                   	push   %ecx
 71d:	ff d2                	call   *%edx
 71f:	83 c4 10             	add    $0x10,%esp
 722:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 725:	c9                   	leave  
 726:	c3                   	ret    
 727:	89 f6                	mov    %esi,%esi
 729:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000730 <__do_global_dtors_aux>:
 730:	55                   	push   %ebp
 731:	89 e5                	mov    %esp,%ebp
 733:	53                   	push   %ebx
 734:	e8 57 ff ff ff       	call   690 <__x86.get_pc_thunk.bx>
 739:	81 c3 73 28 00 00    	add    $0x2873,%ebx
 73f:	83 ec 04             	sub    $0x4,%esp
 742:	80 bb 70 00 00 00 00 	cmpb   $0x0,0x70(%ebx)
 749:	75 27                	jne    772 <__do_global_dtors_aux+0x42>
 74b:	8b 83 40 00 00 00    	mov    0x40(%ebx),%eax
 751:	85 c0                	test   %eax,%eax
 753:	74 11                	je     766 <__do_global_dtors_aux+0x36>
 755:	83 ec 0c             	sub    $0xc,%esp
 758:	ff b3 58 00 00 00    	pushl  0x58(%ebx)
 75e:	e8 dd fe ff ff       	call   640 <__cxa_finalize@plt>
 763:	83 c4 10             	add    $0x10,%esp
 766:	e8 35 ff ff ff       	call   6a0 <deregister_tm_clones>
 76b:	c6 83 70 00 00 00 01 	movb   $0x1,0x70(%ebx)
 772:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 775:	c9                   	leave  
 776:	c3                   	ret    
 777:	89 f6                	mov    %esi,%esi
 779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000780 <frame_dummy>:
 780:	55                   	push   %ebp
 781:	89 e5                	mov    %esp,%ebp
 783:	5d                   	pop    %ebp
 784:	e9 57 ff ff ff       	jmp    6e0 <register_tm_clones>

00000789 <__x86.get_pc_thunk.dx>:
 789:	8b 14 24             	mov    (%esp),%edx
 78c:	c3                   	ret    

0000078d <fail>:
 78d:	56                   	push   %esi
 78e:	53                   	push   %ebx
 78f:	83 ec 10             	sub    $0x10,%esp
 792:	e8 f9 fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 797:	81 c3 15 28 00 00    	add    $0x2815,%ebx
 79d:	6a 01                	push   $0x1
 79f:	e8 fc fd ff ff       	call   5a0 <sleep@plt>
 7a4:	8d b3 b4 db ff ff    	lea    -0x244c(%ebx),%esi
 7aa:	89 34 24             	mov    %esi,(%esp)
 7ad:	e8 1e fe ff ff       	call   5d0 <puts@plt>
 7b2:	8d 83 dc db ff ff    	lea    -0x2424(%ebx),%eax
 7b8:	89 04 24             	mov    %eax,(%esp)
 7bb:	e8 10 fe ff ff       	call   5d0 <puts@plt>
 7c0:	89 34 24             	mov    %esi,(%esp)
 7c3:	e8 08 fe ff ff       	call   5d0 <puts@plt>
 7c8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 7cf:	e8 0c fe ff ff       	call   5e0 <exit@plt>

000007d4 <success>:
 7d4:	56                   	push   %esi
 7d5:	53                   	push   %ebx
 7d6:	83 ec 10             	sub    $0x10,%esp
 7d9:	e8 b2 fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 7de:	81 c3 ce 27 00 00    	add    $0x27ce,%ebx
 7e4:	6a 01                	push   $0x1
 7e6:	e8 b5 fd ff ff       	call   5a0 <sleep@plt>
 7eb:	8d b3 04 dc ff ff    	lea    -0x23fc(%ebx),%esi
 7f1:	89 34 24             	mov    %esi,(%esp)
 7f4:	e8 d7 fd ff ff       	call   5d0 <puts@plt>
 7f9:	8d 83 28 dc ff ff    	lea    -0x23d8(%ebx),%eax
 7ff:	89 04 24             	mov    %eax,(%esp)
 802:	e8 c9 fd ff ff       	call   5d0 <puts@plt>
 807:	89 34 24             	mov    %esi,(%esp)
 80a:	e8 c1 fd ff ff       	call   5d0 <puts@plt>
 80f:	83 c4 14             	add    $0x14,%esp
 812:	5b                   	pop    %ebx
 813:	5e                   	pop    %esi
 814:	c3                   	ret    

00000815 <insert1>:
 815:	53                   	push   %ebx
 816:	83 ec 14             	sub    $0x14,%esp
 819:	e8 72 fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 81e:	81 c3 8e 27 00 00    	add    $0x278e,%ebx
 824:	6a 08                	push   $0x8
 826:	e8 95 fd ff ff       	call   5c0 <malloc@plt>
 82b:	83 c4 10             	add    $0x10,%esp
 82e:	85 c0                	test   %eax,%eax
 830:	74 1a                	je     84c <insert1+0x37>
 832:	8b 54 24 10          	mov    0x10(%esp),%edx
 836:	89 10                	mov    %edx,(%eax)
 838:	8b 93 74 00 00 00    	mov    0x74(%ebx),%edx
 83e:	89 50 04             	mov    %edx,0x4(%eax)
 841:	89 83 74 00 00 00    	mov    %eax,0x74(%ebx)
 847:	83 c4 08             	add    $0x8,%esp
 84a:	5b                   	pop    %ebx
 84b:	c3                   	ret    
 84c:	8d 83 80 dc ff ff    	lea    -0x2380(%ebx),%eax
 852:	50                   	push   %eax
 853:	6a 15                	push   $0x15
 855:	8d 83 4c dc ff ff    	lea    -0x23b4(%ebx),%eax
 85b:	50                   	push   %eax
 85c:	8d 83 55 dc ff ff    	lea    -0x23ab(%ebx),%eax
 862:	50                   	push   %eax
 863:	e8 c8 fd ff ff       	call   630 <__assert_fail@plt>

00000868 <insert2>:
 868:	53                   	push   %ebx
 869:	83 ec 14             	sub    $0x14,%esp
 86c:	e8 1f fe ff ff       	call   690 <__x86.get_pc_thunk.bx>
 871:	81 c3 3b 27 00 00    	add    $0x273b,%ebx
 877:	6a 08                	push   $0x8
 879:	e8 42 fd ff ff       	call   5c0 <malloc@plt>
 87e:	83 c4 10             	add    $0x10,%esp
 881:	85 c0                	test   %eax,%eax
 883:	74 22                	je     8a7 <insert2+0x3f>
 885:	8b 54 24 10          	mov    0x10(%esp),%edx
 889:	89 10                	mov    %edx,(%eax)
 88b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 892:	8b 93 74 00 00 00    	mov    0x74(%ebx),%edx
 898:	85 d2                	test   %edx,%edx
 89a:	74 27                	je     8c3 <insert2+0x5b>
 89c:	8b 4a 04             	mov    0x4(%edx),%ecx
 89f:	85 c9                	test   %ecx,%ecx
 8a1:	75 2a                	jne    8cd <insert2+0x65>
 8a3:	89 d1                	mov    %edx,%ecx
 8a5:	eb 2d                	jmp    8d4 <insert2+0x6c>
 8a7:	8d 83 78 dc ff ff    	lea    -0x2388(%ebx),%eax
 8ad:	50                   	push   %eax
 8ae:	6a 1d                	push   $0x1d
 8b0:	8d 83 4c dc ff ff    	lea    -0x23b4(%ebx),%eax
 8b6:	50                   	push   %eax
 8b7:	8d 83 55 dc ff ff    	lea    -0x23ab(%ebx),%eax
 8bd:	50                   	push   %eax
 8be:	e8 6d fd ff ff       	call   630 <__assert_fail@plt>
 8c3:	89 83 74 00 00 00    	mov    %eax,0x74(%ebx)
 8c9:	eb 0c                	jmp    8d7 <insert2+0x6f>
 8cb:	89 d1                	mov    %edx,%ecx
 8cd:	8b 51 04             	mov    0x4(%ecx),%edx
 8d0:	85 d2                	test   %edx,%edx
 8d2:	75 f7                	jne    8cb <insert2+0x63>
 8d4:	89 41 04             	mov    %eax,0x4(%ecx)
 8d7:	83 c4 08             	add    $0x8,%esp
 8da:	5b                   	pop    %ebx
 8db:	c3                   	ret    

000008dc <pop>:
 8dc:	56                   	push   %esi
 8dd:	53                   	push   %ebx
 8de:	83 ec 10             	sub    $0x10,%esp
 8e1:	e8 aa fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 8e6:	81 c3 c6 26 00 00    	add    $0x26c6,%ebx
 8ec:	8b 83 74 00 00 00    	mov    0x74(%ebx),%eax
 8f2:	8b 50 04             	mov    0x4(%eax),%edx
 8f5:	89 93 74 00 00 00    	mov    %edx,0x74(%ebx)
 8fb:	8b 30                	mov    (%eax),%esi
 8fd:	50                   	push   %eax
 8fe:	e8 7d fc ff ff       	call   580 <free@plt>
 903:	89 f0                	mov    %esi,%eax
 905:	83 c4 14             	add    $0x14,%esp
 908:	5b                   	pop    %ebx
 909:	5e                   	pop    %esi
 90a:	c3                   	ret    

0000090b <dump>:
 90b:	57                   	push   %edi
 90c:	56                   	push   %esi
 90d:	53                   	push   %ebx
 90e:	e8 7d fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 913:	81 c3 99 26 00 00    	add    $0x2699,%ebx
 919:	8b b3 74 00 00 00    	mov    0x74(%ebx),%esi
 91f:	85 f6                	test   %esi,%esi
 921:	74 1d                	je     940 <dump+0x35>
 923:	8d bb 5f dc ff ff    	lea    -0x23a1(%ebx),%edi
 929:	83 ec 04             	sub    $0x4,%esp
 92c:	ff 36                	pushl  (%esi)
 92e:	57                   	push   %edi
 92f:	6a 01                	push   $0x1
 931:	e8 da fc ff ff       	call   610 <__printf_chk@plt>
 936:	8b 76 04             	mov    0x4(%esi),%esi
 939:	83 c4 10             	add    $0x10,%esp
 93c:	85 f6                	test   %esi,%esi
 93e:	75 e9                	jne    929 <dump+0x1e>
 940:	5b                   	pop    %ebx
 941:	5e                   	pop    %esi
 942:	5f                   	pop    %edi
 943:	c3                   	ret    

00000944 <main>:
 944:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 948:	83 e4 f0             	and    $0xfffffff0,%esp
 94b:	ff 71 fc             	pushl  -0x4(%ecx)
 94e:	55                   	push   %ebp
 94f:	89 e5                	mov    %esp,%ebp
 951:	57                   	push   %edi
 952:	56                   	push   %esi
 953:	53                   	push   %ebx
 954:	51                   	push   %ecx
 955:	81 ec 28 02 00 00    	sub    $0x228,%esp
 95b:	e8 30 fd ff ff       	call   690 <__x86.get_pc_thunk.bx>
 960:	81 c3 4c 26 00 00    	add    $0x264c,%ebx
 966:	8b 01                	mov    (%ecx),%eax
 968:	8b 51 04             	mov    0x4(%ecx),%edx
 96b:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
 972:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
 975:	31 c9                	xor    %ecx,%ecx
 977:	83 f8 02             	cmp    $0x2,%eax
 97a:	74 7e                	je     9fa <main+0xb6>
 97c:	8b 83 48 00 00 00    	mov    0x48(%ebx),%eax
 982:	8b 38                	mov    (%eax),%edi
 984:	83 ec 0c             	sub    $0xc,%esp
 987:	ff b3 64 00 00 00    	pushl  0x64(%ebx)
 98d:	e8 83 fe ff ff       	call   815 <insert1>
 992:	83 c4 04             	add    $0x4,%esp
 995:	ff b3 6c 00 00 00    	pushl  0x6c(%ebx)
 99b:	e8 c8 fe ff ff       	call   868 <insert2>
 9a0:	83 c4 04             	add    $0x4,%esp
 9a3:	ff b3 68 00 00 00    	pushl  0x68(%ebx)
 9a9:	e8 ba fe ff ff       	call   868 <insert2>
 9ae:	83 c4 04             	add    $0x4,%esp
 9b1:	ff b3 5c 00 00 00    	pushl  0x5c(%ebx)
 9b7:	e8 59 fe ff ff       	call   815 <insert1>
 9bc:	83 c4 04             	add    $0x4,%esp
 9bf:	ff b3 60 00 00 00    	pushl  0x60(%ebx)
 9c5:	e8 9e fe ff ff       	call   868 <insert2>
 9ca:	83 c4 04             	add    $0x4,%esp
 9cd:	ff b3 64 00 00 00    	pushl  0x64(%ebx)
 9d3:	e8 90 fe ff ff       	call   868 <insert2>
 9d8:	83 c4 10             	add    $0x10,%esp
 9db:	be 01 00 00 00       	mov    $0x1,%esi
 9e0:	8b 83 48 00 00 00    	mov    0x48(%ebx),%eax
 9e6:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 9ec:	8d 83 65 dc ff ff    	lea    -0x239b(%ebx),%eax
 9f2:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 9f8:	eb 3c                	jmp    a36 <main+0xf2>
 9fa:	83 ec 08             	sub    $0x8,%esp
 9fd:	8d 83 63 dc ff ff    	lea    -0x239d(%ebx),%eax
 a03:	50                   	push   %eax
 a04:	ff 72 04             	pushl  0x4(%edx)
 a07:	e8 f4 fb ff ff       	call   600 <fopen@plt>
 a0c:	89 c7                	mov    %eax,%edi
 a0e:	83 c4 10             	add    $0x10,%esp
 a11:	e9 6e ff ff ff       	jmp    984 <main+0x40>
 a16:	83 ec 04             	sub    $0x4,%esp
 a19:	56                   	push   %esi
 a1a:	ff b5 cc fd ff ff    	pushl  -0x234(%ebp)
 a20:	6a 01                	push   $0x1
 a22:	e8 e9 fb ff ff       	call   610 <__printf_chk@plt>
 a27:	83 c4 10             	add    $0x10,%esp
 a2a:	eb 14                	jmp    a40 <main+0xfc>
 a2c:	e8 5c fd ff ff       	call   78d <fail>
 a31:	83 fe 05             	cmp    $0x5,%esi
 a34:	7f 5c                	jg     a92 <main+0x14e>
 a36:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 a3c:	39 38                	cmp    %edi,(%eax)
 a3e:	74 d6                	je     a16 <main+0xd2>
 a40:	83 ec 04             	sub    $0x4,%esp
 a43:	57                   	push   %edi
 a44:	68 00 02 00 00       	push   $0x200
 a49:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 a4f:	50                   	push   %eax
 a50:	e8 3b fb ff ff       	call   590 <fgets@plt>
 a55:	83 c4 10             	add    $0x10,%esp
 a58:	85 c0                	test   %eax,%eax
 a5a:	74 d5                	je     a31 <main+0xed>
 a5c:	83 ec 04             	sub    $0x4,%esp
 a5f:	6a 0a                	push   $0xa
 a61:	6a 00                	push   $0x0
 a63:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 a69:	50                   	push   %eax
 a6a:	e8 b1 fb ff ff       	call   620 <strtol@plt>
 a6f:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 a75:	e8 62 fe ff ff       	call   8dc <pop>
 a7a:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 a80:	83 c2 02             	add    $0x2,%edx
 a83:	83 c4 10             	add    $0x10,%esp
 a86:	39 d0                	cmp    %edx,%eax			make sure eax and edx are equal and your good else fail
 a88:	75 a2                	jne    a2c <main+0xe8>
 a8a:	83 c6 01             	add    $0x1,%esi
 a8d:	83 fe 05             	cmp    $0x5,%esi
 a90:	7e a4                	jle    a36 <main+0xf2>
 a92:	e8 3d fd ff ff       	call   7d4 <success>
 a97:	b8 00 00 00 00       	mov    $0x0,%eax
 a9c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 a9f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 aa6:	75 0c                	jne    ab4 <main+0x170>
 aa8:	8d 65 f0             	lea    -0x10(%ebp),%esp
 aab:	59                   	pop    %ecx
 aac:	5b                   	pop    %ebx
 aad:	5e                   	pop    %esi
 aae:	5f                   	pop    %edi
 aaf:	5d                   	pop    %ebp
 ab0:	8d 61 fc             	lea    -0x4(%ecx),%esp
 ab3:	c3                   	ret    
 ab4:	e8 77 00 00 00       	call   b30 <__stack_chk_fail_local>
 ab9:	66 90                	xchg   %ax,%ax
 abb:	66 90                	xchg   %ax,%ax
 abd:	66 90                	xchg   %ax,%ax
 abf:	90                   	nop

00000ac0 <__libc_csu_init>:
 ac0:	55                   	push   %ebp
 ac1:	57                   	push   %edi
 ac2:	56                   	push   %esi
 ac3:	53                   	push   %ebx
 ac4:	e8 c7 fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 ac9:	81 c3 e3 24 00 00    	add    $0x24e3,%ebx
 acf:	83 ec 0c             	sub    $0xc,%esp
 ad2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 ad6:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 adc:	e8 63 fa ff ff       	call   544 <_init>
 ae1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 ae7:	29 c6                	sub    %eax,%esi
 ae9:	c1 fe 02             	sar    $0x2,%esi
 aec:	85 f6                	test   %esi,%esi
 aee:	74 25                	je     b15 <__libc_csu_init+0x55>
 af0:	31 ff                	xor    %edi,%edi
 af2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 af8:	83 ec 04             	sub    $0x4,%esp
 afb:	55                   	push   %ebp
 afc:	ff 74 24 2c          	pushl  0x2c(%esp)
 b00:	ff 74 24 2c          	pushl  0x2c(%esp)
 b04:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 b0b:	83 c7 01             	add    $0x1,%edi
 b0e:	83 c4 10             	add    $0x10,%esp
 b11:	39 fe                	cmp    %edi,%esi
 b13:	75 e3                	jne    af8 <__libc_csu_init+0x38>
 b15:	83 c4 0c             	add    $0xc,%esp
 b18:	5b                   	pop    %ebx
 b19:	5e                   	pop    %esi
 b1a:	5f                   	pop    %edi
 b1b:	5d                   	pop    %ebp
 b1c:	c3                   	ret    
 b1d:	8d 76 00             	lea    0x0(%esi),%esi

00000b20 <__libc_csu_fini>:
 b20:	f3 c3                	repz ret 
 b22:	66 90                	xchg   %ax,%ax
 b24:	66 90                	xchg   %ax,%ax
 b26:	66 90                	xchg   %ax,%ax
 b28:	66 90                	xchg   %ax,%ax
 b2a:	66 90                	xchg   %ax,%ax
 b2c:	66 90                	xchg   %ax,%ax
 b2e:	66 90                	xchg   %ax,%ax

00000b30 <__stack_chk_fail_local>:
 b30:	53                   	push   %ebx
 b31:	e8 5a fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 b36:	81 c3 76 24 00 00    	add    $0x2476,%ebx
 b3c:	83 ec 08             	sub    $0x8,%esp
 b3f:	e8 6c fa ff ff       	call   5b0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000b44 <_fini>:
 b44:	53                   	push   %ebx
 b45:	83 ec 08             	sub    $0x8,%esp
 b48:	e8 43 fb ff ff       	call   690 <__x86.get_pc_thunk.bx>
 b4d:	81 c3 5f 24 00 00    	add    $0x245f,%ebx
 b53:	83 c4 08             	add    $0x8,%esp
 b56:	5b                   	pop    %ebx
 b57:	c3                   	ret    
